version: "3.9"

networks:
  traefik-network:
    external: true

services:
  traefik:
    container_name: traefik
    image: "traefik:latest"
    environment:
      TZ: "Europe/Kiev"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
#      - --entrypoints.dnsovertls.address=:853/tcp
#      - --entrypoints.dns.address=:53/tcp
#      - --entrypoints.udpdns.address=:53/udp
      - --providers.docker
      - --log.level=ERROR
      - --certificatesresolvers.leresolver.acme.httpchallenge=true
      - --certificatesresolvers.leresolver.acme.email=username@gmail.com #Set your email address here, is for the generation of SSL certificates with Let's Encrypt.
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web
    ports:
#      - "53:53/tcp"
#      - "53:53/udp"
      - "80:80"
      - "443:443"
#      - "853:853/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/storj/traefik/letsencrypt:/letsencrypt"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    networks:
      - traefik-network

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    environment:
      TZ: "Europe/Kiev"
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/storj/portainer:/data
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`portainer.domain.com`)" # Set your domain!
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.tls.certresolver=leresolver"

      # Edge
#      - "traefik.http.routers.edge.rule=Host(`edge.chifty-host.chifty.top`)"
#      - "traefik.http.routers.edge.entrypoints=websecure"
#      - "traefik.http.services.edge.loadbalancer.server.port=8000"
#      - "traefik.http.routers.edge.service=edge"
#      - "traefik.http.routers.edge.tls.certresolver=leresolver"
    networks:
      - traefik-network
    depends_on:
      - traefik